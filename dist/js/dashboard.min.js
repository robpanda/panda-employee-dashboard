(()=>{var m=[],f=[],$=null,I=new Set,N="https://w40mq6ab11.execute-api.us-east-2.amazonaws.com/prod";function D(o){if(!o)return{firstName:"",lastName:""};let e=o.replace(/"/g,"").trim().split(" ");return e.length===1?{firstName:e[0],lastName:""}:e.length===2?{firstName:e[0],lastName:e[1]}:{firstName:e[0],lastName:e.slice(1).join(" ")}}function C(o){let t=o.split(`
`),e=t[0].split(",").map(n=>n.replace(/"/g,"").trim()),a=[];for(let n=1;n<t.length;n++)if(t[n].trim()){let r=M(t[n]),l={};if(e.forEach((d,h)=>{l[d]=r[h]||""}),l.Name){let d=D(l.Name);l["First Name"]=d.firstName,l["Last Name"]=d.lastName,delete l.Name}a.push(l)}return a}function M(o){let t=[],e="",a=!1;for(let n=0;n<o.length;n++){let r=o[n];r==='"'?a=!a:r===","&&!a?(t.push(e.trim()),e=""):e+=r}return t.push(e.trim()),t}function x(o){let t=new Date().toISOString().split("T")[0],e=0,a=0,n=0;o.forEach(s=>{!s.employee_id&&s["First Name"]&&s["Last Name"]&&(s.employee_id=T(s["First Name"],s["Last Name"]))});let r=new Map,l=new Map,d=new Map;o.forEach(s=>{let c=s.employee_id,u=(s.Email||"").toLowerCase().trim(),i=`${s["First Name"]||""} ${s["Last Name"]||""}`.toLowerCase().trim();c&&r.set(c,s),u&&l.set(u,s),i&&i!==" "&&d.set(i,s)});let h=[];return m.forEach((s,c)=>{let u=s.employee_id,i=(s.Email||"").toLowerCase().trim(),g=`${s["First Name"]||""} ${s["Last Name"]||""}`.toLowerCase().trim(),p=u&&r.has(u),y=!p&&i&&l.has(i),E=!p&&!y&&g&&g!==" "&&d.has(g);!p&&!y&&!E?h.push(c):n++}),h.reverse().forEach(s=>{let c=m[s];c["Termination Date"]=t,c.Terminated="Yes",f.push(c),m.splice(s,1),a++,n--}),o.forEach(s=>{let c=s.employee_id,u=(s.Email||"").toLowerCase().trim(),i=`${s["First Name"]||""} ${s["Last Name"]||""}`.toLowerCase().trim(),g=m.some(y=>{let E=y.employee_id,b=(y.Email||"").toLowerCase().trim(),v=`${y["First Name"]||""} ${y["Last Name"]||""}`.toLowerCase().trim();return c&&E===c||u&&b===u||i&&i!==" "&&v===i}),p=f.some(y=>{let E=y.employee_id,b=(y.Email||"").toLowerCase().trim(),v=`${y["First Name"]||""} ${y["Last Name"]||""}`.toLowerCase().trim();return c&&E===c||u&&b===u||i&&i!==" "&&v===i});!g&&!p&&(s["Employment Date"]||(s["Employment Date"]=t),s.Terminated="No",m.push(s),e++)}),{added:e,terminated:a,unchanged:n}}function w(){let o=document.getElementById("employeeTableBody");o.innerHTML="";let t=0,e=0,a=0,n=0,r=new Date,l=new Date(r.getTime()-30*24*60*60*1e3),d=new Date(r.getTime()-60*24*60*60*1e3),h=new Date(r.getTime()-90*24*60*60*1e3);m.forEach((s,c)=>{let u=document.createElement("tr"),i=new Date(s["Employment Date"]);i>h&&i<=r&&(t++,i>l?e++:i>d?a++:n++);let g=Math.floor((r-i)/(1e3*60*60*24)),p="";g<=40?p="color: #dc3545; font-weight: bold;":g<=89?p="color: #ffc107; font-weight: bold;":p="color: #28a745; font-weight: bold;",u.innerHTML=`
            <td><input type="checkbox" class="employee-select" data-index="${c}" onchange="updateEmployeeMergeButton()"></td>
            <td><a href="#" class="name-link" onclick="openEditModal(${c})">${s["First Name"]||""}</a></td>
            <td>${s["Last Name"]||""}</td>
            <td>${s.Department||""}</td>
            <td>${s.Position||""}</td>
            <td>${s["Employment Date"]||""}</td>
            <td style="${p}">${s["Years of Service"]||""}</td>
            <td>${s.Email||""}</td>
            <td>${s.Phone||""}</td>
            <td>${s["Merch Requested"]||""}</td>
            <td>${s["Merch Sent"]||"No"}</td>
            <td>
                <button class="action-btn edit-btn" onclick="openEditModal(${c})">Edit</button>
                <button class="action-btn delete-btn" onclick="terminateEmployee(${c})">Terminate</button>
            </td>
        `,o.appendChild(u)}),document.getElementById("totalEmployees").textContent=m.length,document.getElementById("newHires").textContent=t,document.getElementById("newHires1to30").textContent=e,document.getElementById("newHires31to60").textContent=a,document.getElementById("newHires61to90").textContent=n,J()}function S(){let o=document.getElementById("terminatedTableBody");o.innerHTML="",f.forEach((t,e)=>{let a=document.createElement("tr");a.innerHTML=`
            <td>${t["First Name"]||""}</td>
            <td>${t["Last Name"]||""}</td>
            <td>${t.Department||""}</td>
            <td>${t.Position||""}</td>
            <td>${t["Employment Date"]||""}</td>
            <td>${t["Termination Date"]||"N/A"}</td>
            <td>${t.Email||""}</td>
            <td><button class="action-btn merge-btn" onclick="reactivateEmployee(${e})">Reactivate</button></td>
        `,o.appendChild(a)})}var F=-1;function A(){document.getElementById("editModal").style.display="none",F=-1}window.onclick=function(o){let t=document.getElementById("editModal");o.target===t&&A()};function k(){let o=[],t=new Map;return[...m,...f].forEach((e,a)=>{let n=(e.Email||"").toLowerCase().trim(),r=(e["Last Name"]||"").toLowerCase().trim(),l=`${e["First Name"]||""} ${e["Last Name"]||""}`.toLowerCase().trim();n&&t.has(`email:${n}`)?o.push({...e,matchType:"Email",group:t.get(`email:${n}`)}):n&&t.set(`email:${n}`,o.length+1),r&&t.has(`lastName:${r}`)?o.push({...e,matchType:"Last Name",group:t.get(`lastName:${r}`)}):r&&t.set(`lastName:${r}`,o.length+1),l&&t.has(`fullName:${l}`)?o.push({...e,matchType:"Full Name",group:t.get(`fullName:${l}`)}):l&&t.set(`fullName:${l}`,o.length+1)}),o}function H(){let o=document.getElementById("duplicateTableBody");o.innerHTML="",k().forEach((e,a)=>{let n=document.createElement("tr");n.innerHTML=`
            <td><input type="checkbox" class="duplicate-select" data-index="${a}" onchange="updateMergeButton()"></td>
            <td>${e.group}</td>
            <td>${e.matchType}</td>
            <td>${e["First Name"]||""}</td>
            <td>${e["Last Name"]||""}</td>
            <td>${e.Department||""}</td>
            <td>${e["Employment Date"]||""}</td>
            <td>${e.Email||""}</td>
            <td>
                <button class="action-btn merge-btn" onclick="mergeDuplicate(${a})">Merge</button>
                <button class="action-btn delete-btn" onclick="deleteDuplicate(${a})">Delete</button>
            </td>
        `,o.appendChild(n)}),R()}async function _(){let o=localStorage.getItem("mergedEmployeeIds");o&&(I=new Set(JSON.parse(o)));try{let e=await(await fetch(`${N}/employees`)).json();if(console.log("Raw API response:",e),e.employees){let a=e.employees;console.log("Total employees from API:",a.length),a=a.filter(n=>!n.employee_id||!I.has(n.employee_id)),a.forEach(n=>{!n.employee_id&&n["First Name"]&&n["Last Name"]&&(n.employee_id=T(n["First Name"],n["Last Name"]))}),m=a.filter(n=>n.Terminated!=="Yes"),f=a.filter(n=>n.Terminated==="Yes"),console.log("Active employees:",m.length),console.log("Terminated employees:",f.length),w(),S()}}catch(t){console.error("API failed, loading from localStorage:",t);let e=localStorage.getItem("employees"),a=localStorage.getItem("terminatedEmployees");e&&(m=JSON.parse(e),f=JSON.parse(a||"[]"),console.log("Loaded from localStorage - Active:",m.length,"Terminated:",f.length),w(),S())}}function T(o,t){let e=(o||"").substring(0,2).toUpperCase(),a=(t||"").substring(0,2).toUpperCase(),n=Date.now().toString().slice(-4);return`${e}${a}${n}`}async function P(o){localStorage.setItem("employees",JSON.stringify(m)),localStorage.setItem("terminatedEmployees",JSON.stringify(f));try{let t=await fetch(`${N}/employees`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({employees:o})});if(!t.ok)return console.warn("Database save failed, using localStorage"),{message:"Saved locally"};let e=await t.json();return console.log("Data saved successfully:",e),e}catch(t){return console.warn("Database save failed, using localStorage:",t),{message:"Saved locally"}}}function B(o){let t=document.getElementById(o);t&&(t.style.opacity="0.5",t.style.transform="translateY(10px)"),document.querySelectorAll(".tab-content").forEach(e=>{e.classList.remove("active")}),document.querySelectorAll(".nav-tab").forEach(e=>{e.classList.remove("active")}),setTimeout(()=>{if(t&&(t.classList.add("active"),t.style.opacity="1",t.style.transform="translateY(0)"),event&&event.target)event.target.classList.add("active");else{let e=document.querySelectorAll(".nav-tab"),n=["employees","terminated","duplicates","upload"].indexOf(o);n>=0&&e[n]&&e[n].classList.add("active")}},100),localStorage.setItem("currentTab",o),o==="duplicates"&&setTimeout(()=>H(),150)}function Y(){let o=document.getElementById("fileInput");if(!o){console.error("File input not found");return}o.addEventListener("change",function(t){let e=t.target.files[0];if(!e)return;console.log("File selected:",e.name,e.size,"bytes");let a=document.getElementById("uploadStatus");a&&(a.innerHTML='<div style="color: blue;">\u{1F4C1} Processing file...</div>');let n=e.name.toLowerCase();if(n.endsWith(".csv")){let r=new FileReader;r.onload=function(l){try{console.log("CSV content loaded, length:",l.target.result.length);let d=C(l.target.result);console.log("Parsed employees:",d.length),q(d)}catch(d){console.error("CSV parsing error:",d),a&&(a.innerHTML=`<div style="color: red;">\u2717 CSV parsing error: ${d.message}</div>`)}},r.onerror=function(){a&&(a.innerHTML='<div style="color: red;">\u2717 Error reading file</div>')},r.readAsText(e)}else n.endsWith(".xlsx")||n.endsWith(".xls")?a&&(a.innerHTML='<div style="color: blue;">\u{1F4CA} For Excel files:<br>1. <a href="https://docs.google.com/spreadsheets/d/1vO-94iEtB8FAthneJ8Cx1Cm-iA-oHJiBwOPAGmsiM-4/edit" target="_blank">Open Google Sheet</a><br>2. File \u2192 Download \u2192 CSV<br>3. Upload CSV here</div>'):a&&(a.innerHTML='<div style="color: red;">\u2717 Please upload a CSV or Excel file</div>')})}async function q(o){try{$={employees:[...m],terminatedEmployees:[...f]};let t=x(o);w(),S();try{await P([...m,...f]),document.getElementById("uploadStatus").innerHTML=`
                <div style="color: green; margin-top: 10px;">
                    \u2713 Smart import completed and saved to database:<br>
                    \u2022 ${t.added} new employees added<br>
                    \u2022 ${t.terminated} employees terminated<br>
                    \u2022 ${t.unchanged} employees unchanged<br>
                    <button class="btn" onclick="undoImport()" style="margin-top: 10px;">Undo Import</button>
                </div>
            `}catch(e){console.error("Database save failed:",e),document.getElementById("uploadStatus").innerHTML=`
                <div style="color: orange; margin-top: 10px;">
                    \u26A0\uFE0F Import completed but database save failed:<br>
                    \u2022 ${t.added} new employees added<br>
                    \u2022 ${t.terminated} employees terminated<br>
                    \u2022 ${t.unchanged} employees unchanged<br>
                    <em>Changes are visible but may not persist on refresh</em><br>
                    <button class="btn" onclick="undoImport()" style="margin-top: 10px;">Undo Import</button>
                </div>
            `}B("employees")}catch(t){document.getElementById("uploadStatus").innerHTML=`<div style="color: red; margin-top: 10px;">\u2717 Error processing file: ${t.message}</div>`}}function O(){let o=document.getElementById("globalSearch").value.toLowerCase();document.querySelectorAll("#employeeTableBody tr").forEach(e=>{let a=e.cells,n=Array.from(a).slice(1,-1).map(l=>l.textContent.toLowerCase()).join(" "),r=!o||n.includes(o);e.style.display=r?"":"none"})}function V(){let o=document.getElementById("terminatedSearch").value.toLowerCase();document.querySelectorAll("#terminatedTableBody tr").forEach(e=>{let a=e.cells,n=Array.from(a).slice(0,-1).map(l=>l.textContent.toLowerCase()).join(" "),r=!o||n.includes(o);e.style.display=r?"":"none"})}function U(){let o=document.getElementById("duplicateSearch").value.toLowerCase();document.querySelectorAll("#duplicateTableBody tr").forEach(e=>{let a=e.cells,n=Array.from(a).slice(1,-1).map(l=>l.textContent.toLowerCase()).join(" "),r=!o||n.includes(o);e.style.display=r?"":"none"})}function j(){[{id:"globalSearch",func:O},{id:"terminatedSearch",func:V},{id:"duplicateSearch",func:U}].forEach(({id:t,func:e})=>{let a=document.getElementById(t);a&&(a.addEventListener("input",e),a.addEventListener("keypress",function(n){n.key==="Enter"&&e()}))})}function J(){let o=document.querySelectorAll(".employee-select:checked"),t=document.getElementById("mergeEmployeesBtn"),e=document.getElementById("selectedEmployeeCount");t&&(t.disabled=o.length<2),e&&(e.textContent=`${o.length} employees selected`)}function R(){let o=document.querySelectorAll(".duplicate-select:checked"),t=document.getElementById("mergeBtn"),e=document.getElementById("selectedCount");t.disabled=o.length<2,e.textContent=`${o.length} selected`}function G(){let o=document.querySelector(".container");o&&(o.style.opacity="0.8",o.style.pointerEvents="none")}function L(){let o=document.querySelector(".container");o&&(o.style.opacity="1",o.style.pointerEvents="auto")}document.addEventListener("DOMContentLoaded",function(){console.log("Dashboard initializing..."),G(),setTimeout(()=>{let o=localStorage.getItem("currentTab")||"employees";B(o),_().then(()=>{L()}).catch(()=>{L()}),j(),Y()},100)});document.addEventListener("keydown",function(o){if(o.ctrlKey&&o.key==="i"){o.preventDefault();let t=document.getElementById("fileInput");t&&t.click()}});})();
