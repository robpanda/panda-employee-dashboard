let employees=[];let terminatedEmployees=[];let importData=null;const API_BASE='https://w40mq6ab11.execute-api.us-east-2.amazonaws.com/prod';async function loadEmployees(){try{const response=await fetch(`${API_BASE}/employees`);const data=await response.json();if(data.employees){let allEmployees=data.employees;employees=allEmployees.filter(emp=>emp.Terminated!=='Yes');terminatedEmployees=allEmployees.filter(emp=>emp.Terminated==='Yes')}}catch(error){console.error('Load failed:',error)}}function parseCSV(csvText){const lines=csvText.split('\n');const headers=lines[0].split(',').map(h=>h.replace(/"/g,'').trim());const data=[];for(let i=1;i<lines.length;i++){if(lines[i].trim()){const values=lines[i].split(',').map(v=>v.replace(/"/g,'').trim());const row={};headers.forEach((header,index)=>{row[header]=values[index]||''});data.push(row)}}return data}function downloadTemplate(){const template='First Name,Last Name,Department,Position,Employment Date,Email,Phone\nJohn,Doe,Sales,Manager,2024-01-15,john.doe@company.com,555-0123\nJane,Smith,Marketing,Coordinator,2024-02-01,jane.smith@company.com,555-0124';const blob=new Blob([template],{type:'text/csv'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='employee_template.csv';a.click();window.URL.revokeObjectURL(url)}async function clearAllData(){if(!confirm('Are you sure you want to clear ALL employee data? This cannot be undone.'))return;const btn=event.target;const originalText=btn.innerHTML;btn.innerHTML='ü§î Clearing...';btn.disabled=true;try{employees=[];terminatedEmployees=[];await saveEmployeesToDB([]);document.getElementById('uploadStatus').innerHTML='<div style="color:orange;">‚ö†Ô∏è All employee data cleared</div>'}catch(error){document.getElementById('uploadStatus').innerHTML=`<div style="color:red;">‚úó Clear failed: ${error.message}</div>`}finally{btn.innerHTML=originalText;btn.disabled=false}}async function confirmImport(){if(!importData)return;const btn=document.querySelector('.btn.confirm');const originalText=btn.textContent;btn.innerHTML='ü§î Importing...';btn.disabled=true;try{await loadEmployees();employees.push(...importData);await saveEmployeesToDB([...employees,...terminatedEmployees]);document.getElementById('importPreview').style.display='none';document.getElementById('uploadStatus').innerHTML='<div style="color:green;">‚úì Import completed successfully</div>';importData=null}catch(error){document.getElementById('uploadStatus').innerHTML=`<div style="color:red;">‚úó Import failed: ${error.message}</div>`}finally{btn.innerHTML=originalText;btn.disabled=false}}function cancelImport(){document.getElementById('importPreview').style.display='none';document.getElementById('uploadStatus').innerHTML='<div style="color:orange;">Import cancelled</div>';importData=null}async function saveEmployeesToDB(allEmployees){try{const response=await fetch(`${API_BASE}/employees`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({employees:allEmployees})});if(!response.ok)throw new Error('Save failed');return await response.json()}catch(error){console.error('Database save failed:',error);throw error}}document.addEventListener('DOMContentLoaded',function(){const fileInput=document.getElementById('fileInput');if(fileInput){fileInput.addEventListener('change',function(e){const file=e.target.files[0];if(!file)return;const reader=new FileReader();reader.onload=function(e){try{const csvData=parseCSV(e.target.result);importData=csvData;const preview=document.getElementById('importPreview');const headers=document.getElementById('previewHeaders');const body=document.getElementById('previewBody');headers.innerHTML='<tr>'+Object.keys(csvData[0]).map(h=>`<th>${h}</th>`).join('')+'</tr>';body.innerHTML=csvData.slice(0,5).map(row=>'<tr>'+Object.values(row).map(v=>`<td>${v}</td>`).join('')+'</tr>').join('');preview.style.display='block';document.getElementById('uploadStatus').innerHTML=`<div style="color:blue;">üìã Preview: ${csvData.length} records ready to import</div>`}catch(error){document.getElementById('uploadStatus').innerHTML=`<div style="color:red;">‚úó Error parsing file: ${error.message}</div>`}};reader.readAsText(file)})}loadEmployees()});