let employees=[];let terminatedEmployees=[];let mergedEmployeeIds=new Set(JSON.parse(localStorage.getItem('mergedEmployeeIds')||'[]'));let importData=null;const API_BASE='https://w40mq6ab11.execute-api.us-east-2.amazonaws.com/prod';async function loadEmployees(){const container=document.querySelector('.container');if(container){container.style.opacity='0.7';container.style.pointerEvents='none'}try{const response=await fetch(`${API_BASE}/employees`);const data=await response.json();console.log('Raw API response:',data);if(data.employees){let allEmployees=data.employees.filter(emp=>!mergedEmployeeIds.has(emp.employee_id));allEmployees.forEach(emp=>{if(!emp.employee_id&&emp['First Name']&&emp['Last Name']){emp.employee_id=generateEmployeeId(emp['First Name'],emp['Last Name'])}});employees=allEmployees.filter(emp=>emp.Terminated!=='Yes');terminatedEmployees=allEmployees.filter(emp=>emp.Terminated==='Yes');console.log('Active employees:',employees.length);console.log('Terminated employees:',terminatedEmployees.length);renderEmployeeTable();renderTerminatedTable();renderDuplicateTable()}}catch(error){console.error('Load failed:',error)}finally{if(container){container.style.opacity='1';container.style.pointerEvents='auto'}}}function renderEmployeeTable(){const tbody=document.getElementById('employeeTableBody');tbody.innerHTML='';let newHireCount=0,newHires1to30=0,newHires31to60=0,newHires61to90=0;const today=new Date();const thirtyDaysAgo=new Date(today.getTime()-30*24*60*60*1000);const sixtyDaysAgo=new Date(today.getTime()-60*24*60*60*1000);const ninetyDaysAgo=new Date(today.getTime()-90*24*60*60*1000);employees.forEach((emp,index)=>{const empDate=new Date(emp['Employment Date']);let rowColor='';if(empDate>ninetyDaysAgo&&empDate<=today){newHireCount++;if(empDate>thirtyDaysAgo){newHires1to30++;rowColor='background:#fee2e2;border-left:4px solid #ef4444;'}else if(empDate>sixtyDaysAgo){newHires31to60++;rowColor='background:#fef3c7;border-left:4px solid #f59e0b;'}else{newHires61to90++;rowColor='background:#dcfce7;border-left:4px solid #22c55e;'}}const row=document.createElement('tr');row.style.cssText=rowColor;row.innerHTML=`<td><input type="checkbox" class="employee-select" data-index="${index}"></td><td>${emp['First Name']||''}</td><td>${emp['Last Name']||''}</td><td>${emp.Department||''}</td><td>${emp.Position||''}</td><td>${emp['Employment Date']||''}</td><td>${emp['Years of Service']||''}</td><td>${emp.Email||''}</td><td>${emp.Phone||''}</td><td>${emp['Merch Requested']||''}</td><td>${emp['Merch Sent']||'No'}</td><td class="actions-col"><button class="btn btn-edit" onclick="openEditModal(${index})" title="Edit Employee">‚úèÔ∏è</button><button class="btn btn-terminate" onclick="terminateEmployee(${index})" title="Terminate Employee">‚ùå</button></td>`;tbody.appendChild(row)});document.getElementById('totalEmployees').textContent=employees.length;document.getElementById('newHires').textContent=newHireCount;const card1=document.getElementById('newHires1to30');card1.textContent=newHires1to30;card1.parentElement.style.borderLeft='4px solid #ef4444';card1.parentElement.onclick=()=>filterByRange('1-30');const card2=document.getElementById('newHires31to60');card2.textContent=newHires31to60;card2.parentElement.style.borderLeft='4px solid #f59e0b';card2.parentElement.onclick=()=>filterByRange('31-60');const card3=document.getElementById('newHires61to90');card3.textContent=newHires61to90;card3.parentElement.style.borderLeft='4px solid #22c55e';card3.parentElement.onclick=()=>filterByRange('61-90');document.getElementById('totalEmployees').parentElement.onclick=()=>filterByRange('all');document.getElementById('newHires').parentElement.onclick=()=>filterByRange('new')}function renderTerminatedTable(){const tbody=document.getElementById('terminatedTableBody');if(!tbody)return;tbody.innerHTML='';terminatedEmployees.forEach((emp,index)=>{const row=document.createElement('tr');row.innerHTML=`<td>${emp['First Name']||''}</td><td>${emp['Last Name']||''}</td><td>${emp.Department||''}</td><td>${emp.Position||''}</td><td>${emp['Employment Date']||''}</td><td>${emp['Termination Date']||'N/A'}</td><td>${emp.Email||''}</td><td class="actions-col"><button class="btn" onclick="reactivateEmployee(${index})" title="Reactivate Employee">üîÑ</button></td>`;tbody.appendChild(row)});document.getElementById('totalTerminated').textContent=terminatedEmployees.length}function renderDuplicateTable(){const tbody=document.getElementById('duplicateTableBody');if(!tbody)return;tbody.innerHTML='';const duplicates=findDuplicates();duplicates.forEach((emp,index)=>{const row=document.createElement('tr');row.innerHTML=`<td><input type="checkbox" class="duplicate-select" data-index="${index}" onchange="updateMergeButton()"></td><td>${emp.matchType}</td><td>${emp['First Name']||''}</td><td>${emp['Last Name']||''}</td><td>${emp.Department||''}</td><td>${emp.Email||''}</td><td>${emp['Employment Date']||''}</td><td class="actions-col"><button class="btn btn-terminate" onclick="deleteDuplicate(${index})" title="Delete Duplicate">üóëÔ∏è</button></td>`;tbody.appendChild(row)});document.getElementById('totalDuplicates').textContent=duplicates.length;updateMergeButton()}function findDuplicates(){const duplicates=[];const seen=new Map();const allEmployees=[...employees,...terminatedEmployees];allEmployees.forEach(emp=>{const email=(emp.Email||'').toLowerCase().trim();const name=`${emp['First Name']||''} ${emp['Last Name']||''}`.toLowerCase().trim();if(email&&seen.has(`email:${email}`)){duplicates.push({...emp,matchType:'Email'})}else if(email){seen.set(`email:${email}`,true)}if(name&&name!==' '&&seen.has(`name:${name}`)){duplicates.push({...emp,matchType:'Name'})}else if(name&&name!==' '){seen.set(`name:${name}`,true)}});return duplicates}async function reactivateEmployee(index){const btn=event.target;const originalText=btn.innerHTML;btn.innerHTML='ü§î';btn.disabled=true;const employee=terminatedEmployees[index];delete employee['Termination Date'];employee['Terminated']='No';employees.push(employee);terminatedEmployees.splice(index,1);try{await saveEmployeesToDB([...employees,...terminatedEmployees]);renderEmployeeTable();renderTerminatedTable()}catch(error){console.error('Reactivate failed:',error)}finally{btn.innerHTML=originalText;btn.disabled=false}}function deleteDuplicate(index){if(!confirm('Delete this duplicate record?'))return;const duplicates=findDuplicates();const toDelete=duplicates[index];const empIndex=employees.findIndex(e=>isSameEmployee(e,toDelete));const termIndex=terminatedEmployees.findIndex(e=>isSameEmployee(e,toDelete));if(empIndex>=0)employees.splice(empIndex,1);if(termIndex>=0)terminatedEmployees.splice(termIndex,1);renderEmployeeTable();renderTerminatedTable();renderDuplicateTable();saveEmployeesToDB([...employees,...terminatedEmployees])}function isSameEmployee(emp1,emp2){if(!emp1||!emp2)return false;const email1=(emp1.Email||'').toLowerCase().trim();const email2=(emp2.Email||'').toLowerCase().trim();if(email1&&email2&&email1===email2)return true;const name1=`${emp1['First Name']||''} ${emp1['Last Name']||''}`.toLowerCase().trim();const name2=`${emp2['First Name']||''} ${emp2['Last Name']||''}`.toLowerCase().trim();return name1&&name2&&name1!=' '&&name2!=' '&&name1===name2}function toggleSelectAllDuplicates(){const selectAll=document.getElementById('selectAllDuplicates');const checkboxes=document.querySelectorAll('.duplicate-select');checkboxes.forEach(cb=>cb.checked=selectAll.checked);updateMergeButton()}function updateMergeButton(){const selected=document.querySelectorAll('.duplicate-select:checked');const mergeBtn=document.getElementById('mergeBtn');const countSpan=document.getElementById('selectedCount');if(mergeBtn)mergeBtn.disabled=selected.length<2;if(countSpan)countSpan.textContent=`${selected.length} selected`}function mergeSelectedDuplicates(){const selected=document.querySelectorAll('.duplicate-select:checked');if(selected.length<2)return;if(!confirm(`Merge ${selected.length} duplicate records?`))return;const indices=Array.from(selected).map(cb=>parseInt(cb.dataset.index));const duplicates=findDuplicates();const toMerge=indices.map(i=>duplicates[i]);const primary=toMerge[0];toMerge.slice(1).forEach(dup=>{const empIndex=employees.findIndex(e=>isSameEmployee(e,dup));const termIndex=terminatedEmployees.findIndex(e=>isSameEmployee(e,dup));if(empIndex>=0)employees.splice(empIndex,1);if(termIndex>=0)terminatedEmployees.splice(termIndex,1)});renderEmployeeTable();renderTerminatedTable();renderDuplicateTable();saveEmployeesToDB([...employees,...terminatedEmployees])}function parseCSV(csvText){const lines=csvText.split('\n');const headers=lines[0].split(',').map(h=>h.replace(/"/g,'').trim());const data=[];for(let i=1;i<lines.length;i++){if(lines[i].trim()){const values=lines[i].split(',').map(v=>v.replace(/"/g,'').trim());const row={};headers.forEach((header,index)=>{row[header]=values[index]||''});data.push(row)}}return data}function downloadTemplate(){const template='First Name,Last Name,Department,Position,Employment Date,Email,Phone\nJohn,Doe,Sales,Manager,2024-01-15,john.doe@company.com,555-0123\nJane,Smith,Marketing,Coordinator,2024-02-01,jane.smith@company.com,555-0124';const blob=new Blob([template],{type:'text/csv'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='employee_template.csv';a.click();window.URL.revokeObjectURL(url)}async function clearAllData(){if(!confirm('Are you sure you want to clear ALL employee data? This cannot be undone.'))return;const btn=event.target;const originalText=btn.innerHTML;btn.innerHTML='ü§î Clearing...';btn.disabled=true;try{employees=[];terminatedEmployees=[];await saveEmployeesToDB([]);renderEmployeeTable();renderTerminatedTable();renderDuplicateTable();document.getElementById('uploadStatus').innerHTML='<div style="color:orange;">‚ö†Ô∏è All employee data cleared</div>'}catch(error){document.getElementById('uploadStatus').innerHTML=`<div style="color:red;">‚úó Clear failed: ${error.message}</div>`}finally{btn.innerHTML=originalText;btn.disabled=false}}function showTab(tabName){document.querySelectorAll('.tab-content').forEach(tab=>tab.classList.remove('active'));document.querySelectorAll('.nav-tab').forEach(tab=>tab.classList.remove('active'));document.getElementById(tabName).classList.add('active');document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');if(tabName==='terminated')renderTerminatedTable();if(tabName==='duplicates')renderDuplicateTable()}function generateEmployeeId(firstName,lastName){const first=(firstName||'').substring(0,2).toUpperCase();const last=(lastName||'').substring(0,2).toUpperCase();const timestamp=Date.now().toString().slice(-4);return`${first}${last}${timestamp}`}let currentEditIndex=-1;function openEditModal(index){currentEditIndex=index;const emp=employees[index];document.getElementById('editFirstName').value=emp['First Name']||'';document.getElementById('editLastName').value=emp['Last Name']||'';document.getElementById('editDepartment').value=emp.Department||'';document.getElementById('editPosition').value=emp.Position||'';document.getElementById('editEmploymentDate').value=emp['Employment Date']||'';document.getElementById('editYearsOfService').value=emp['Years of Service']||'';document.getElementById('editEmail').value=emp.Email||'';document.getElementById('editPhone').value=emp.Phone||'';document.getElementById('editMerchRequested').value=emp['Merch Requested']||'';document.getElementById('editMerchSent').value=emp['Merch Sent']||'No';document.getElementById('editMerchSentDate').value=emp['Merch Sent Date']||'';calculateYearsOfService();document.getElementById('editModal').style.display='block'}function closeEditModal(){document.getElementById('editModal').style.display='none';currentEditIndex=-1}function calculateYearsOfService(){const empDate=document.getElementById('editEmploymentDate').value;if(!empDate)return;const today=new Date();const employmentDate=new Date(empDate);const diffTime=Math.abs(today-employmentDate);const diffYears=(diffTime/(1000*60*60*24*365.25)).toFixed(1);document.getElementById('editYearsOfService').value=diffYears}async function saveEmployee(){if(currentEditIndex===-1)return;const saveBtn=document.querySelector('.form-actions .btn');const originalText=saveBtn.textContent;saveBtn.innerHTML='ü§î Saving...';saveBtn.disabled=true;const emp=employees[currentEditIndex];emp['First Name']=document.getElementById('editFirstName').value;emp['Last Name']=document.getElementById('editLastName').value;emp.Department=document.getElementById('editDepartment').value;emp.Position=document.getElementById('editPosition').value;emp['Employment Date']=document.getElementById('editEmploymentDate').value;calculateYearsOfService();emp['Years of Service']=document.getElementById('editYearsOfService').value;emp.Email=document.getElementById('editEmail').value;emp.Phone=document.getElementById('editPhone').value;emp['Merch Requested']=document.getElementById('editMerchRequested').value;emp['Merch Sent']=document.getElementById('editMerchSent').value;emp['Merch Sent Date']=document.getElementById('editMerchSentDate').value;try{await saveEmployeesToDB([...employees,...terminatedEmployees]);renderEmployeeTable();closeEditModal()}catch(error){console.error('Save failed:',error)}finally{saveBtn.innerHTML=originalText;saveBtn.disabled=false}}async function terminateEmployee(index){if(!confirm('Are you sure you want to terminate this employee?'))return;const btn=event.target;const originalText=btn.innerHTML;btn.innerHTML='ü§î';btn.disabled=true;const employee=employees[index];const today=new Date().toISOString().split('T')[0];employee['Termination Date']=today;employee['Terminated']='Yes';terminatedEmployees.push(employee);employees.splice(index,1);try{await saveEmployeesToDB([...employees,...terminatedEmployees]);renderEmployeeTable();renderTerminatedTable()}catch(error){console.error('Terminate failed:',error)}finally{btn.innerHTML=originalText;btn.disabled=false}}async function saveEmployeesToDB(allEmployees){try{const response=await fetch(`${API_BASE}/employees`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({employees:allEmployees})});if(!response.ok)throw new Error('Save failed');return await response.json()}catch(error){console.error('Database save failed:',error);throw error}}let currentFilter='all';function filterByRange(range){currentFilter=range;document.querySelectorAll('.stat-card').forEach(card=>card.classList.remove('active'));const today=new Date();const thirtyDaysAgo=new Date(today.getTime()-30*24*60*60*1000);const sixtyDaysAgo=new Date(today.getTime()-60*24*60*60*1000);const ninetyDaysAgo=new Date(today.getTime()-90*24*60*60*1000);const rows=document.querySelectorAll('#employeeTableBody tr');rows.forEach((row,index)=>{const emp=employees[index];if(!emp)return;const empDate=new Date(emp['Employment Date']);let show=false;switch(range){case'all':show=true;document.getElementById('totalEmployees').parentElement.classList.add('active');break;case'new':show=empDate>ninetyDaysAgo&&empDate<=today;document.getElementById('newHires').parentElement.classList.add('active');break;case'1-30':show=empDate>thirtyDaysAgo&&empDate<=today;document.getElementById('newHires1to30').parentElement.classList.add('active');break;case'31-60':show=empDate>sixtyDaysAgo&&empDate<=thirtyDaysAgo;document.getElementById('newHires31to60').parentElement.classList.add('active');break;case'61-90':show=empDate>ninetyDaysAgo&&empDate<=sixtyDaysAgo;document.getElementById('newHires61to90').parentElement.classList.add('active');break}row.style.display=show?'':'none'})}let sortDirection={};function sortTable(columnIndex){const tbody=document.getElementById('employeeTableBody');const rows=Array.from(tbody.rows);const direction=sortDirection[columnIndex]||'asc';sortDirection[columnIndex]=direction==='asc'?'desc':'asc';const actualColumnIndex=columnIndex+1;rows.sort((a,b)=>{let aVal=a.cells[actualColumnIndex].textContent.trim();let bVal=b.cells[actualColumnIndex].textContent.trim();if(columnIndex===4||columnIndex===5){aVal=new Date(aVal);bVal=new Date(bVal)}else if(columnIndex===5){aVal=parseFloat(aVal)||0;bVal=parseFloat(bVal)||0}if(aVal<bVal)return direction==='asc'?-1:1;if(aVal>bVal)return direction==='asc'?1:-1;return 0});rows.forEach(row=>tbody.appendChild(row))}function toggleSelectAllEmployees(){const selectAll=document.getElementById('selectAllEmployees');const checkboxes=document.querySelectorAll('.employee-select');checkboxes.forEach(cb=>cb.checked=selectAll.checked)}function searchEmployees(){const term=document.getElementById('globalSearch').value.toLowerCase();const rows=document.querySelectorAll('#employeeTableBody tr');rows.forEach(row=>{const text=row.textContent.toLowerCase();row.style.display=text.includes(term)?'':'none'})}function searchTerminated(){const term=document.getElementById('terminatedSearch').value.toLowerCase();const rows=document.querySelectorAll('#terminatedTableBody tr');rows.forEach(row=>{const text=row.textContent.toLowerCase();row.style.display=text.includes(term)?'':'none'})}function searchDuplicates(){const term=document.getElementById('duplicateSearch').value.toLowerCase();const rows=document.querySelectorAll('#duplicateTableBody tr');rows.forEach(row=>{const text=row.textContent.toLowerCase();row.style.display=text.includes(term)?'':'none'})}function confirmImport(){if(!importData)return;employees.push(...importData);renderEmployeeTable();saveEmployeesToDB([...employees,...terminatedEmployees]);document.getElementById('importPreview').style.display='none';document.getElementById('uploadStatus').innerHTML='<div style="color:green;">‚úì Import completed successfully</div>';importData=null}function cancelImport(){document.getElementById('importPreview').style.display='none';document.getElementById('uploadStatus').innerHTML='<div style="color:orange;">Import cancelled</div>';importData=null}document.addEventListener('DOMContentLoaded',function(){document.querySelectorAll('.nav-tab').forEach(tab=>{tab.addEventListener('click',()=>showTab(tab.dataset.tab))});document.getElementById('globalSearch').addEventListener('keypress',function(e){if(e.key==='Enter')searchEmployees()});document.getElementById('globalSearch').addEventListener('input',searchEmployees);const terminatedSearch=document.getElementById('terminatedSearch');if(terminatedSearch){terminatedSearch.addEventListener('keypress',function(e){if(e.key==='Enter')searchTerminated()});terminatedSearch.addEventListener('input',searchTerminated)}const duplicateSearch=document.getElementById('duplicateSearch');if(duplicateSearch){duplicateSearch.addEventListener('keypress',function(e){if(e.key==='Enter')searchDuplicates()});duplicateSearch.addEventListener('input',searchDuplicates)}const fileInput=document.getElementById('fileInput');if(fileInput){fileInput.addEventListener('change',function(e){const file=e.target.files[0];if(!file)return;const reader=new FileReader();reader.onload=function(e){try{const csvData=parseCSV(e.target.result);importData=csvData;const preview=document.getElementById('importPreview');const headers=document.getElementById('previewHeaders');const body=document.getElementById('previewBody');headers.innerHTML='<tr>'+Object.keys(csvData[0]).map(h=>`<th>${h}</th>`).join('')+'</tr>';body.innerHTML=csvData.slice(0,5).map(row=>'<tr>'+Object.values(row).map(v=>`<td>${v}</td>`).join('')+'</tr>').join('');preview.style.display='block';document.getElementById('uploadStatus').innerHTML=`<div style="color:blue;">üìã Preview: ${csvData.length} records ready to import</div>`}catch(error){document.getElementById('uploadStatus').innerHTML=`<div style="color:red;">‚úó Error parsing file: ${error.message}</div>`}};reader.readAsText(file)})}document.getElementById('editModal').addEventListener('click',function(e){if(e.target===this)closeEditModal()});loadEmployees();showTab('employees')});