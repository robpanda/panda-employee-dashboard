import boto3
from decimal import Decimal

# Initialize DynamoDB
dynamodb = boto3.resource('dynamodb', region_name='us-east-1')
table = dynamodb.Table('panda-employees')

# Employee data with correct first names
employees = {
    "10427": "Bryan",
    "11254": "George", 
    "10702": "Bryan",
    "10955": "Camila",
    "10311": "J.",
    "10221": "Dan",
    "10679": "Chris",
    "11128": "Spencer",
    "10240": "Christopher",
    "10452": "Brian",
    "11241": "Ashley",
    "10959": "Adewale",
    "11227": "Kevin",
    "124": "Christopher",
    "11125": "Marcus",
    "11117": "Stacee",
    "10286": "Austin",
    "10181": "Oscar",
    "10934": "Marshall",
    "10537": "Alix",
    "10463": "Luis",
    "11261": "Quatavis",
    "11218": "Angel",
    "11226": "Carter",
    "11203": "Steven",
    "11188": "Misael",
    "10445": "Joseph",
    "10678": "Amedeo",
    "11181": "Brian",
    "10267": "Jimmy",
    "10761": "Peter",
    "10530": "Matthew",
    "11222": "Skyler",
    "10008": "Christian",
    "10994": "Ryan",
    "11244": "Nhat",
    "10112": "Jason",
    "11190": "Chad",
    "10269": "Dalton",
    "11085": "Dalton",
    "10328": "Raymond",
    "10876": "Michael",
    "10557": "Luciano",
    "10487": "Taj",
    "11011": "Roland",
    "11037": "Jake",
    "10957": "Zak",
    "11033": "Jalil",
    "11147": "Ryan",
    "10657": "Miguel",
    "10930": "Ethan",
    "11236": "Will",
    "11017": "Steve",
    "11022": "Josh",
    "11189": "Maurice",
    "11134": "Garrett",
    "10951": "Matthew",
    "10278": "Noah",
    "10757": "Madeleine",
    "11223": "Jordan",
    "10536": "Kevin",
    "11249": "Lawrence",
    "10539": "Manuel",
    "10414": "Sutton",
    "10778": "Sheraton",
    "10423": "Andreas",
    "10915": "Nicholas",
    "10268": "Jonathan",
    "10982": "Caroline",
    "11049": "Slava",
    "10645": "Cristel",
    "11182": "Matthew",
    "10014": "Thomas",
    "10378": "Santi",
    "11217": "Corey",
    "10341": "Sully",
    "10492": "Bryon",
    "11268": "Derick",
    "10234": "Daniel",
    "10087": "Nick",
    "11186": "Rasheem",
    "10517": "Chris",
    "11021": "Jake",
    "10026": "Trevor",
    "11214": "Dishawn",
    "10664": "Jerron",
    "10687": "Shaye",
    "11224": "Mack",
    "11075": "Eshraq",
    "10140": "Cheyne",
    "11003": "James",
    "10684": "Joshua",
    "10881": "Sheena",
    "10412": "Joe",
    "10497": "Gavin",
    "10426": "Kaleb",
    "10037": "Valerie",
    "11062": "Josh",
    "10322": "Diego",
    "10084": "Dani",
    "10672": "Andrew",
    "10316": "Matt",
    "10734": "Victor",
    "11025": "Junior",
    "10783": "Chad",
    "10843": "David",
    "10981": "David",
    "11156": "Colin",
    "10475": "William",
    "11054": "Wilder",
    "10282": "KJ",
    "11232": "Tasneem",
    "11192": "Eddie",
    "10575": "Cael",
    "10625": "Sergio",
    "10723": "Jessica",
    "10569": "Eric",
    "11278": "Rene",
    "11243": "Leandro",
    "10552": "Dakota",
    "10467": "Richard",
    "10848": "Nand",
    "10993": "Pratik",
    "11039": "Brenden",
    "10465": "Alyssa",
    "11187": "Javier",
    "10784": "Scott",
    "10985": "Brad",
    "10935": "Bryan",
    "11213": "Adam",
    "11289": "Adrian",
    "10450": "Marc",
    "11282": "DaJha",
    "10952": "Mark",
    "11204": "Elex",
    "10011": "Anthony",
    "10024": "Jason",
    "10085": "Matthew",
    "10923": "Todd",
    "10690": "Patrick",
    "11275": "Sophia",
    "11196": "Renee",
    "11120": "Cazeau",
    "10342": "Idris",
    "10612": "Gregory",
    "10701": "Blair",
    "11279": "Earl",
    "10437": "Samuel",
    "10730": "Pluto",
    "11281": "Joel",
    "10028": "Kyle",
    "11040": "Phil",
    "11167": "Stew",
    "10370": "Mike",
    "10997": "Orenthal",
    "11266": "Jaysson",
    "11111": "Bruce",
    "11115": "Jeff",
    "10855": "Julian",
    "10110": "Scott",
    "11042": "Tony",
    "10277": "Jessie",
    "10360": "Larry",
    "10733": "Edward",
    "11089": "Ken",
    "11200": "Jordan",
    "10980": "Rob",
    "10946": "Antoine",
    "11178": "Ronald",
    "10022": "Jason",
    "10729": "Colin",
    "10503": "Aliaksandra",
    "11209": "Thomas"
}

def update_employee_names():
    updated_count = 0
    
    for employee_id, first_name in employees.items():
        try:
            # Update both first_name and First Name fields
            response = table.update_item(
                Key={'employee_id': employee_id},
                UpdateExpression='SET first_name = :fn, #fname = :fn',
                ExpressionAttributeNames={'#fname': 'First Name'},
                ExpressionAttributeValues={':fn': first_name},
                ReturnValues='UPDATED_NEW'
            )
            print(f"Updated {employee_id}: {first_name}")
            updated_count += 1
            
        except Exception as e:
            print(f"Error updating {employee_id}: {str(e)}")
    
    print(f"\nTotal employees updated: {updated_count}")

if __name__ == "__main__":
    update_employee_names()